name: Deploy to ACR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build container image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Sign in to Azure        
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build the Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.IMAGE_NAME }}:latest .
      - name: Deploy the Docker image to ACR
        run: |
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.IMAGE_NAME }}:latest
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Log into registry
        uses: azure/docker-login@v1
        with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@47e03a783248cc0b5647f7ea03a8fb807fbc8e2f
        with:
          containerAppName: container-app-groupe5 
          resourceGroup: ${{ secrets.RESOURCE_GROUP }}
          imageToDeploy: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.IMAGE_NAME }}:v1
          containerAppEnvironment: grp5-env
      - name: Update ACA
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update \
              -n container-app-groupe5 \
              -g ${{ secrets.RESOURCE_GROUP }} \
              --min-replicas 0 \
              --max-replicas 10 \
              --scale-rule-name my-http-rule \
              --scale-rule-type http \
              --scale-rule-http-concurrency 10
              az containerapp ingress enable \
              -n container-app-groupe5  \
              -g ${{ secrets.RESOURCE_GROUP }} \
              --type external \
              --allow-insecure \
              --target-port 80 \
              --transport auto
